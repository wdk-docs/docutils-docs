# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Nosy
# This file is distributed under the same license as the docutils-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: docutils-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-22 22:32+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/howto/i18n.rst:3
msgid "Docutils_ Internationalization"
msgstr ""

#: ../../source/howto/i18n.rst:0
msgid "Author"
msgstr ""

#: ../../source/howto/i18n.rst:5
msgid "David Goodger"
msgstr ""

#: ../../source/howto/i18n.rst:0
msgid "Contact"
msgstr ""

#: ../../source/howto/i18n.rst:6
msgid "docutils-develop@lists.sourceforge.net"
msgstr ""

#: ../../source/howto/i18n.rst:0
msgid "Date"
msgstr ""

#: ../../source/howto/i18n.rst:7
msgid "$Date: 2014-07-07 05:12:02 +0200 (Mo, 07. Jul 2014) $"
msgstr ""

#: ../../source/howto/i18n.rst:0
msgid "Revision"
msgstr ""

#: ../../source/howto/i18n.rst:8
msgid "$Revision: 7769 $"
msgstr ""

#: ../../source/howto/i18n.rst:0
msgid "Copyright"
msgstr ""

#: ../../source/howto/i18n.rst:9
msgid "This document has been placed in the public domain."
msgstr ""

#: ../../source/howto/i18n.rst:13
msgid "目录"
msgstr ""

#: ../../source/howto/i18n.rst:15
msgid "This document describes the internationalization facilities of the Docutils_ project.  `Introduction to i18n`_ by Tomohiro KUBOTA is a good general reference.  \"Internationalization\" is often abbreviated as \"i18n\": \"i\" + 18 letters + \"n\"."
msgstr ""

#: ../../source/howto/i18n.rst:22
msgid "The i18n facilities of Docutils should be considered a \"first draft\".  They work so far, but improvements are welcome. Specifically, standard i18n facilities like \"gettext\" have yet to be explored."
msgstr ""

#: ../../source/howto/i18n.rst:27
msgid "Docutils is designed to work flexibly with text in multiple languages (one language at a time).  Language-specific features are (or should be [#]_) fully parameterized.  To enable a new language, two modules have to be added to the project: one for Docutils itself (the `Docutils Language Module`_) and one for the reStructuredText parser (the `reStructuredText Language Module`_)."
msgstr ""

#: ../../source/howto/i18n.rst:34
msgid "If anything in Docutils is insufficiently parameterized, it should be considered a bug.  Please report bugs to the Docutils project bug tracker on SourceForge at http://sourceforge.net/p/docutils/bugs/"
msgstr ""

#: ../../source/howto/i18n.rst:45
msgid "Language Module Names"
msgstr ""

#: ../../source/howto/i18n.rst:47
msgid "Language modules are named using `language tags`_ as defined in `BCP 47`_. [#]_ in lowercase, converting hyphens to underscores [#]_."
msgstr ""

#: ../../source/howto/i18n.rst:50
msgid "A typical language identifier consists of a 2-letter language code from `ISO 639`_ (3-letter codes can be used if no 2-letter code exists). The language identifier can have an optional subtag, typically for variations based on country (from `ISO 3166`_ 2-letter country codes).  If no language identifier is specified, the default is \"en\" for English.  Examples of module names include ``en.py``, ``fr.py``, ``ja.py``, and ``pt_br.py``."
msgstr ""

#: ../../source/howto/i18n.rst:58
msgid "BCP stands for 'Best Current Practice', and is a persistent name for a series of RFCs whose numbers change as they are updated. The latest RFC describing language tag syntax is RFC 5646, Tags for the Identification of Languages, and it obsoletes the older RFCs 4646, 3066 and 1766."
msgstr ""

#: ../../source/howto/i18n.rst:64
msgid "Subtags are separated from primary tags by underscores instead of hyphens, to conform to Python naming rules."
msgstr ""

#: ../../source/howto/i18n.rst:75
msgid "Python Code"
msgstr ""

#: ../../source/howto/i18n.rst:77
msgid "Generally Python code in Docutils is ASCII-only.  In language modules, Unicode-escapes can be used for non-ASCII characters."
msgstr ""

#: ../../source/howto/i18n.rst:80
msgid "`PEP 263`_ introduces source code encodings to Python modules, implemented beginning in Python 2.3.  Especially for languages with non-Latin scripts, using UTF-8 encoded literal Unicode strings increases the readability. Start the source code file with the magic comment::"
msgstr ""

#: ../../source/howto/i18n.rst:87
msgid "As mentioned in the note above, developers are invited to explore \"gettext\" and other i18n technologies."
msgstr ""

#: ../../source/howto/i18n.rst:94
msgid "Docutils Language Module"
msgstr ""

#: ../../source/howto/i18n.rst:96
msgid "Modules in ``docutils/languages`` contain language mappings for markup-independent language-specific features of Docutils.  To make a new language module, just copy the ``en.py`` file, rename it with the code for your language (see `Language Module Names`_ above), and translate the terms as described below."
msgstr ""

#: ../../source/howto/i18n.rst:102
msgid "Each Docutils language module contains three module attributes:"
msgstr ""

#: ../../source/howto/i18n.rst:111
msgid "``labels``"
msgstr ""

#: ../../source/howto/i18n.rst:105
msgid "This is a mapping of node class names to language-dependent boilerplate label text.  The label text is used by Writer components when they encounter document tree elements whose class names are the mapping keys."
msgstr ""

#: ../../source/howto/i18n.rst:110
msgid "The entry values (*not* the keys) should be translated to the target language."
msgstr ""

#: ../../source/howto/i18n.rst:119
msgid "``bibliographic_fields``"
msgstr ""

#: ../../source/howto/i18n.rst:114
msgid "This is a mapping of language-dependent field names (converted to lower case) to canonical field names (keys of ``DocInfo.biblio_notes`` in ``docutils.transforms.frontmatter``). It is used when transforming bibliographic fields."
msgstr ""

#: ../../source/howto/i18n.rst:119
msgid "The keys should be translated to the target language."
msgstr ""

#: ../../source/howto/i18n.rst:130
msgid "``author_separators``"
msgstr ""

#: ../../source/howto/i18n.rst:122
msgid "This is a list of strings used to parse the 'Authors' bibliographic field.  They separate individual authors' names, and are tried in order (i.e., earlier items take priority, and the first item that matches wins).  The English-language module defines them as ``[';', ',']``; semi-colons can be used to separate names like \"Arthur Pewtie, Esq.\"."
msgstr ""

#: ../../source/howto/i18n.rst:129
msgid "Most languages won't have to \"translate\" this list."
msgstr ""

#: ../../source/howto/i18n.rst:133
msgid "reStructuredText Language Module"
msgstr ""

#: ../../source/howto/i18n.rst:135
msgid "Modules in ``docutils/parsers/rst/languages`` contain language mappings for language-specific features of the reStructuredText parser.  To make a new language module, just copy the ``en.py`` file, rename it with the code for your language (see `Language Module Names`_ above), and translate the terms as described below."
msgstr ""

#: ../../source/howto/i18n.rst:141
msgid "Each reStructuredText language module contains two module attributes:"
msgstr ""

#: ../../source/howto/i18n.rst:151
msgid "``directives``"
msgstr ""

#: ../../source/howto/i18n.rst:144
msgid "This is a mapping from language-dependent directive names to canonical directive names.  The canonical directive names are registered in ``docutils/parsers/rst/directives/__init__.py``, in ``_directive_registry``."
msgstr ""

#: ../../source/howto/i18n.rst:149
#: ../../source/howto/i18n.rst:159
msgid "The keys should be translated to the target language.  Synonyms (multiple keys with the same values) are allowed; this is useful for abbreviations."
msgstr ""

#: ../../source/howto/i18n.rst:162
msgid "``roles``"
msgstr ""

#: ../../source/howto/i18n.rst:154
msgid "This is a mapping language-dependent role names to canonical role names for interpreted text.  The canonical directive names are registered in ``docutils/parsers/rst/states.py``, in ``Inliner._interpreted_roles`` (this may change)."
msgstr ""

#: ../../source/howto/i18n.rst:165
msgid "Testing the Language Modules"
msgstr ""

#: ../../source/howto/i18n.rst:167
msgid "Whenever a new language module is added or an existing one modified, the unit tests should be run.  The test modules can be found in the docutils/test directory from code_ or from the `latest snapshot`_."
msgstr ""

#: ../../source/howto/i18n.rst:171
msgid "The ``test_language.py`` module can be run as a script.  With no arguments, it will test all language modules.  With one or more language codes, it will test just those languages.  For example::"
msgstr ""

#: ../../source/howto/i18n.rst:182
msgid "Use the \"alltests.py\" script to run all test modules, exhaustively testing the parser and other parts of the Docutils system."
msgstr ""

#: ../../source/howto/i18n.rst:190
msgid "Submitting the Language Modules"
msgstr ""

#: ../../source/howto/i18n.rst:192
msgid "If you do not have repository write access and want to contribute your language modules, feel free to submit them via the `SourceForge patch tracker`__."
msgstr ""


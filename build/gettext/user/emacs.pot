# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Nosy
# This file is distributed under the same license as the docutils-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: docutils-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-22 22:32+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/user/emacs.rst:5
msgid "Emacs Support for reStructuredText"
msgstr ""

#: ../../source/user/emacs.rst:0
msgid "Authors"
msgstr ""

#: ../../source/user/emacs.rst:7
msgid "Stefan Merten <stefan@merten-home.de>, Martin Blais <blais@furius.ca>"
msgstr ""

#: ../../source/user/emacs.rst:0
msgid "Version"
msgstr ""

#: ../../source/user/emacs.rst:9
msgid "``rst.el`` V1.4.1"
msgstr ""

#: ../../source/user/emacs.rst:0
msgid "Abstract"
msgstr ""

#: ../../source/user/emacs.rst:12
msgid "High-level description of the existing Emacs_ support for editing reStructuredText_ text documents. Suggested setup code and usage instructions are provided."
msgstr ""

#: ../../source/user/emacs.rst:16
msgid "目录"
msgstr ""

#: ../../source/user/emacs.rst:19
msgid "Introduction"
msgstr ""

#: ../../source/user/emacs.rst:21
msgid "reStructuredText_ is a syntax for simple text files that allows a tool set - docutils_ - to extract generic document structure. For people who use Emacs_, there is a package that adds a major mode that supports editing the syntax of reStructuredText_: ``rst.el``. This document describes the features it provides, and how to setup your Emacs_ to use them and how to invoke them."
msgstr ""

#: ../../source/user/emacs.rst:29
msgid "Installation"
msgstr ""

#: ../../source/user/emacs.rst:31
msgid "Emacs_ support for reStructuredText_ is implemented as an Emacs_ major mode (``rst-mode``) provided by the ``rst.el`` Emacs_ package."
msgstr ""

#: ../../source/user/emacs.rst:34
msgid "Emacs_ distributions contain ``rst.el`` since version V23.1. However, a significantly updated version of ``rst.el`` is contained in Emacs_ V24.3. This document describes the version of ``rst.el`` contained in Emacs_ V24.3 and later versions. This version of ``rst.el`` has the internal version V1.4.1."
msgstr ""

#: ../../source/user/emacs.rst:40
msgid "If you have Emacs_ V24.3 or later you do not need to install anything to get reST support. If you have an Emacs_ between V23.1 and V24.2 you may use the version of ``rst.el`` installed with Emacs_ or install a more recent one locally_ (recommended). In other cases you need to install ``rst.el`` locally_ to get reST support."
msgstr ""

#: ../../source/user/emacs.rst:47
msgid "Checking situation"
msgstr ""

#: ../../source/user/emacs.rst:49
msgid "Here are some steps to check your situation:"
msgstr ""

#: ../../source/user/emacs.rst:51
msgid "In Emacs_ switch to an empty buffer and try ::"
msgstr ""

#: ../../source/user/emacs.rst:55
msgid "If this works you have ``rst.el`` installed somewhere. You can see that it works if you find a string ``ReST`` in Emacs' modeline of the current buffer. If this doesn't work you need to install ``rst.el`` yourself locally_."
msgstr ""

#: ../../source/user/emacs.rst:60
msgid "In the buffer you just switched to ``rst-mode`` try ::"
msgstr ""

#: ../../source/user/emacs.rst:64
msgid "If this fails you have a version of ``rst.el`` older than V1.1.0. Either you have an old ``rst.el`` locally or you are using an Emacs_ between V23.1 and V24.2. In this case it is recommended that you install a more recent version of ``rst.el`` locally_."
msgstr ""

#: ../../source/user/emacs.rst:69
msgid "You may also try ::"
msgstr ""

#: ../../source/user/emacs.rst:73
msgid "to find out your Emacs_ version."
msgstr ""

#: ../../source/user/emacs.rst:75
msgid "Check the version of ``rst.el``"
msgstr ""

#: ../../source/user/emacs.rst:77
msgid "The content of ``rst-version`` gives you the internal version of ``rst.el``. The version contained in Emacs_ V24.3 and described here is V1.4.0. If you have an older version you may or may not install a more recent version of ``rst.el`` locally_."
msgstr ""

#: ../../source/user/emacs.rst:85
msgid "Local installation"
msgstr ""

#: ../../source/user/emacs.rst:87
msgid "If you decided to install locally please follow these steps."
msgstr ""

#: ../../source/user/emacs.rst:89
msgid "Download ``rst.el``"
msgstr ""

#: ../../source/user/emacs.rst:91
msgid "Download the most recent published version of ``rst.el`` from http://sourceforge.net/p/docutils/code/HEAD/tree/trunk/docutils/tools/editors/emacs/rst.el"
msgstr ""

#: ../../source/user/emacs.rst:94
msgid "Put ``rst.el`` to a directory in ``load-path``"
msgstr ""

#: ../../source/user/emacs.rst:96
msgid "Use ::"
msgstr ""

#: ../../source/user/emacs.rst:100
msgid "If in the resulting list you find a directory in your home directory put ``rst.el`` in this directory."
msgstr ""

#: ../../source/user/emacs.rst:103
msgid "Make sure the directory is one of the first entries in ``load-path``. Otherwise a version of ``rst.el`` which came with Emacs_ may be found before your local version."
msgstr ""

#: ../../source/user/emacs.rst:107
msgid "In Emacs_ see the info node ``Init File Examples`` for more information on how to set up your Emacs_ initialization machinery. Try ::"
msgstr ""

#: ../../source/user/emacs.rst:115
msgid "Enable ``rst-mode``"
msgstr ""

#: ../../source/user/emacs.rst:117
msgid "Add the following to your Emacs_ initialization setup ::"
msgstr ""

#: ../../source/user/emacs.rst:121
msgid "After you restarted Emacs_ ``rst.el`` is loaded and ready to be used."
msgstr ""

#: ../../source/user/emacs.rst:125
msgid "Switching ``rst-mode`` on"
msgstr ""

#: ../../source/user/emacs.rst:127
msgid "By default ``rst-mode`` is switched on for files ending in ``.rst`` or ``.rest``. If in a buffer you want to switch ``rst-mode`` on manually use ::"
msgstr ""

#: ../../source/user/emacs.rst:133
msgid "If you want to use ``rst-mode`` in files with other extensions modify ``auto-mode-alist`` to automatically turn it on whenever you visit reStructuredText_ documents::"
msgstr ""

#: ../../source/user/emacs.rst:142
msgid "Put the extensions you want in the correct place in the example above. Add more lines if needed."
msgstr ""

#: ../../source/user/emacs.rst:145
msgid "If have local variables enabled (try ``C-h v enable-local-variables`` to find out), you can also add the following at the top of your documents to trigger rst-mode::"
msgstr ""

#: ../../source/user/emacs.rst:151
msgid "Or this at the end of your documents::"
msgstr ""

#: ../../source/user/emacs.rst:159
msgid "Key bindings"
msgstr ""

#: ../../source/user/emacs.rst:161
msgid "``rst-mode`` automatically binds several keys for invoking special functions for editing reStructuredText_. Since ``rst-mode`` contains a lot of functionality most key bindings consist of three keystrokes."
msgstr ""

#: ../../source/user/emacs.rst:166
msgid "Following the Emacs_ conventions for major modes the key bindings of ``rst-mode`` start with ``C-c C-<letter>``. The second key stroke selects a group of key bindings:"
msgstr ""

#: ../../source/user/emacs.rst:172
msgid "C-c C-a"
msgstr ""

#: ../../source/user/emacs.rst:171
msgid "Commands to adjust the section headers and work with the hierarchy they build."
msgstr ""

#: ../../source/user/emacs.rst:176
msgid "C-c C-c"
msgstr ""

#: ../../source/user/emacs.rst:175
msgid "Commands to compile the current reStructuredText_ document to various output formats."
msgstr ""

#: ../../source/user/emacs.rst:179
msgid "C-c C-l"
msgstr ""

#: ../../source/user/emacs.rst:179
msgid "Commands to work with lists of various kinds."
msgstr ""

#: ../../source/user/emacs.rst:182
msgid "C-c C-r"
msgstr ""

#: ../../source/user/emacs.rst:182
msgid "Commands to manipulate the current region."
msgstr ""

#: ../../source/user/emacs.rst:185
msgid "C-c C-t"
msgstr ""

#: ../../source/user/emacs.rst:185
msgid "Commands to create and manipulate a table of contents."
msgstr ""

#: ../../source/user/emacs.rst:187
msgid "At any stage of typing you may use ``C-h`` to get help on the available key bindings. I.e. ``C-c C-h`` gives you help on all key bindings while ``C-c C-r C-h`` gives you help on the commands for regions. This is handy if you forgot a certain key binding."
msgstr ""

#: ../../source/user/emacs.rst:192
msgid "Additional key bindings which have a certain meaning in other Emacs_ modes are reused in ``rst-mode`` so you don't have to learn a different set of key bindings for editing reStructuredText_."
msgstr ""

#: ../../source/user/emacs.rst:196
msgid "In ``rst-mode`` try ::"
msgstr ""

#: ../../source/user/emacs.rst:200
msgid "to list all mode specific key bindings. Most of the key bindings are described in this tutorial."
msgstr ""

#: ../../source/user/emacs.rst:203
msgid "The key bindings have been completely revamped in ``rst.el`` V1.0.0. This was necessary to make room for new functionality. Some of the old bindings still work but give a warning to use the new binding. In the output of ``C-h m`` these bindings show up as ``rst-deprecated-...``. The old bindings will be removed completely in a later version."
msgstr ""

#: ../../source/user/emacs.rst:211
msgid "Section Adornments"
msgstr ""

#: ../../source/user/emacs.rst:213
msgid "``rst-mode`` recognizes the section adornments building the section hierarchy of the document. Section adornments are the underlines or under- and overlines used to mark a section title. There are a couple of commands to work with section adornments. These commands are bound to key bindings starting with ``C-c C-a``."
msgstr ""

#: ../../source/user/emacs.rst:220
msgid "Adjusting a Section Title"
msgstr ""

#: ../../source/user/emacs.rst:222
msgid "There is a function that helps a great deal to maintain these adornments: ``rst-adjust`` (bound to ``C-c C-a C-a``, ``C-c C-=``, and ``C-=``). This function is a Swiss army knife that can be invoked repeatedly and whose behavior depends on context:"
msgstr ""

#: ../../source/user/emacs.rst:227
msgid "If there is an incomplete adornment, e.g. ::"
msgstr ""

#: ../../source/user/emacs.rst:232
msgid "invocation will complete the adornment. It can also be used to adjust the length of the existing adornment when you need to edit the title."
msgstr ""

#: ../../source/user/emacs.rst:236
msgid "If there is no section adornment at all, by default an adornment of the same level as the last encountered section level is added. You can simply enter a few characters of the title and invoke the function to create the section adornment."
msgstr ""

#: ../../source/user/emacs.rst:241
msgid "The variable ``rst-new-adornment-down`` can be customized to create one level lower adornments than the previous section title instead of keeping the level."
msgstr ""

#: ../../source/user/emacs.rst:245
msgid "If there is already a section adornment, it is promoted one level up. You can invoke it like this repeatedly to cycle the title through the hierarchy of existing adornments."
msgstr ""

#: ../../source/user/emacs.rst:249
msgid "Invoking the function with a negative prefix argument, e.g. ``C-- C-=``, will effectively reverse the direction of adornment cycling. To alternate between underline-only and over-and-under styles, you can use a regular prefix argument, e.g. ``C-u C-=``. See the documentation of ``rst-adjust`` for more description of the prefix arguments to alter the behavior of the function."
msgstr ""

#: ../../source/user/emacs.rst:257
msgid "Promoting and Demoting Many Sections"
msgstr ""

#: ../../source/user/emacs.rst:259
msgid "When you are re-organizing the structure of a document, it can be useful to change the level of a number of section titles. The same key binding can be used to do that: if the region is active when the binding is invoked, all the section titles that are within the region are promoted accordingly (or demoted, with negative prefix argument)."
msgstr ""

#: ../../source/user/emacs.rst:266
msgid "Redoing All the Adornments to Your Taste"
msgstr ""

#: ../../source/user/emacs.rst:268
msgid "If you open someone else's file and the adornments it contains are unfamiliar, you may want to readjust them to fit your own preferred hierarchy of adornments. This can be difficult to perform by hand. However, you can do this easily by invoking ``rst-straighten-adornments`` (``C-c C-a C-s``), which operates on the entire buffer."
msgstr ""

#: ../../source/user/emacs.rst:276
msgid "Customizations for Adornments"
msgstr ""

#: ../../source/user/emacs.rst:278
msgid "You can customize the variable ``rst-preferred-adornments`` to a list of the adornments that you like to use for documents."
msgstr ""

#: ../../source/user/emacs.rst:281
msgid "If you prefer adornments according to http://sphinx-doc.org/rest.html#sections you may customize it to end up with a value like this::"
msgstr ""

#: ../../source/user/emacs.rst:292
msgid "This will become the default in a later version of ``rst.el``."
msgstr ""

#: ../../source/user/emacs.rst:294
msgid "If you set ``rst-preferred-adornments`` to nil resembling the empty list only the section adornment found in the buffer will be used."
msgstr ""

#: ../../source/user/emacs.rst:298
msgid "Viewing the Hierarchy of Section Adornments"
msgstr ""

#: ../../source/user/emacs.rst:300
msgid "You can visualize the hierarchy of the section adornments in the current buffer by invoking ``rst-display-adornments-hierarchy``, bound on ``C-c C-a C-d``. A temporary buffer will appear with fake section titles rendered in the style of the current document. This can be useful when editing other people's documents to find out which section adornments correspond to which levels."
msgstr ""

#: ../../source/user/emacs.rst:308
msgid "Movement and Selection"
msgstr ""

#: ../../source/user/emacs.rst:311
msgid "Movement and Selection for Sections"
msgstr ""

#: ../../source/user/emacs.rst:313
msgid "You can move the cursor between the different section titles by using the ``rst-backward-section`` (``C-M-a``) and ``rst-forward-section`` (``C-M-e``). To mark the section that cursor lies in, use ``rst-mark-section`` (``C-M-h``)."
msgstr ""

#: ../../source/user/emacs.rst:318
msgid "The key bindings are modeled after other modes with similar functionality."
msgstr ""

#: ../../source/user/emacs.rst:322
msgid "Movements and Selection for Text Blocks"
msgstr ""

#: ../../source/user/emacs.rst:324
msgid "The understanding of reStructuredText_ of ``rst-mode`` is used to set all the variables influencing Emacs' understanding of paragraphs. Thus all operations on paragraphs work as usual. For instance ``forward-paragraph`` (``M-}``) works as usual."
msgstr ""

#: ../../source/user/emacs.rst:330
msgid "Indenting and Filling"
msgstr ""

#: ../../source/user/emacs.rst:332
msgid "Indentation of text plays a major role in the syntax of reStructuredText_. It is tedious to maintain the indentation manually. ``rst-mode`` understands most of the structure of reStructuredText_ allowing for sophisticated indentation and filling support described in this section."
msgstr ""

#: ../../source/user/emacs.rst:339
msgid "Indenting Text Blocks"
msgstr ""

#: ../../source/user/emacs.rst:341
msgid "``rst-mode`` supports indentation of text blocks by the command ``rst-shift-region`` (``C-c C-r TAB``). Mark a region and use ``C-c C-r TAB`` to indent all blocks one tab to the right. Use ``M-- C-c C-r TAB`` to indent the region one tab to the left."
msgstr ""

#: ../../source/user/emacs.rst:346
msgid "You may use arbitrary prefix arguments such as ``M-2`` or ``M-- 2`` to determine the number of tabs you want to indent. A prefix of ``M-0`` removes all indentation in the active region."
msgstr ""

#: ../../source/user/emacs.rst:350
msgid "A tab is an indentation making sense for the block at hand in reStructuredText_ syntax. In some cases the exact indentation depends on personal taste. You may customize a couple of variables ``M-x customize-group<RET> rst-indent<RET>`` to match your taste."
msgstr ""

#: ../../source/user/emacs.rst:356
msgid "Indenting Lines While Typing"
msgstr ""

#: ../../source/user/emacs.rst:358
msgid "In Emacs_ the ``TAB`` key is often used for indenting the current line. ``rst-mode`` implements this for the sophisticated indentation rules of reStructuredText_. Pressing ``TAB`` cycles through the possible tabs for the current line. In the same manner ``newline-and-indent`` (``C-j``) indents the new line properly."
msgstr ""

#: ../../source/user/emacs.rst:364
msgid "This is very handy while writing lists. Consider this reStructuredText_ bullet list with the cursor at ``@``::"
msgstr ""

#: ../../source/user/emacs.rst:371
msgid "Type ``C-j`` twice to get this::"
msgstr ""

#: ../../source/user/emacs.rst:379
msgid "Now you an enter text at this level, or start a new list item by typing another ``*``. Or you may type ``TAB`` to reduce the indentation once::"
msgstr ""

#: ../../source/user/emacs.rst:389
msgid "Typing another ``TAB`` gets you to the first level::"
msgstr ""

#: ../../source/user/emacs.rst:397
msgid "Since Emacs_ V24.4 ``electric-indent-mode`` is globally on. This breaks indentation in ``rst-mode`` and renders ``rst-mode`` mostly useless. This is fixed in V1.4.1 of ``rst-mode``."
msgstr ""

#: ../../source/user/emacs.rst:402
msgid "A quick fix for older versions of ``rst.el`` is to add the following line at the end of the ``(define-derived-mode rst-mode ...`` block in your copy of ``rst.el``::"
msgstr ""

#: ../../source/user/emacs.rst:408
msgid "You may also install V1.4.1 or newer locally_."
msgstr ""

#: ../../source/user/emacs.rst:411
msgid "Filling"
msgstr ""

#: ../../source/user/emacs.rst:413
msgid "``rst-mode`` understanding the indentation rules of reStructuredText_ also supports filling paragraphs. Just use ``fill-paragraph`` (``M-q``) as you do in other modes."
msgstr ""

#: ../../source/user/emacs.rst:418
msgid "Operating on Lists"
msgstr ""

#: ../../source/user/emacs.rst:420
msgid "Lists are supported in various flavors in reStructuredText_. ``rst-mode`` understands reStructuredText_ lists and offers some support for operating on lists. Key bindings for commands for operating on lists start with ``C-c C-l``."
msgstr ""

#: ../../source/user/emacs.rst:425
msgid "Please note that so far definition lists are not explicitly supported by ``rst-mode``."
msgstr ""

#: ../../source/user/emacs.rst:429
msgid "Bulleted and Enumerated Lists"
msgstr ""

#: ../../source/user/emacs.rst:431
msgid "If you have a couple of plain lines you want to turn into an enumerated list you can invoke ``rst-enumerate-region`` (``C-c C-l C-e``). For example, the following region ::"
msgstr ""

#: ../../source/user/emacs.rst:441
#: ../../source/user/emacs.rst:532
msgid "becomes ::"
msgstr ""

#: ../../source/user/emacs.rst:449
msgid "``rst-bullet-list-region`` (``C-c C-l C-b``) does the same, but results in a bullet list ::"
msgstr ""

#: ../../source/user/emacs.rst:458
msgid "By default, each paragraph starting on the leftmost line in the highlighted region will be taken to be a single list or enumeration item, for example, enumerating the following::"
msgstr ""

#: ../../source/user/emacs.rst:472
msgid "Will result in::"
msgstr ""

#: ../../source/user/emacs.rst:484
msgid "If you would like to enumerate each of the lines, use a prefix argument on the preceding commands, e.g.::"
msgstr ""

#: ../../source/user/emacs.rst:491
#: ../../source/user/emacs.rst:551
msgid "becomes::"
msgstr ""

#: ../../source/user/emacs.rst:498
msgid "Straightening Existing Bullet List Hierarchies"
msgstr ""

#: ../../source/user/emacs.rst:500
msgid "If you invoke ``rst-straighten-bullets-region`` (``C-c C-l C-s``), the existing bullets in the active region will be replaced to reflect their respective level. This does not make a difference in the document structure that reStructuredText_ defines, but looks better in, for example, if all of the top-level bullet items use the character ``-``, and all of the 2nd level items use ``*``, etc."
msgstr ""

#: ../../source/user/emacs.rst:508
msgid "Inserting a List Item"
msgstr ""

#: ../../source/user/emacs.rst:510
msgid "To start a new list you may invoke ``rst-insert-list`` (``C-c C-l C-i``). You may choose from an item style supported by reStructuredText_."
msgstr ""

#: ../../source/user/emacs.rst:514
msgid "You may also invoke ``rst-insert-list`` at the end of a list item. In this case it inserts a new line containing the markup for the a list item on the same level."
msgstr ""

#: ../../source/user/emacs.rst:519
msgid "Operating on Other Text Blocks"
msgstr ""

#: ../../source/user/emacs.rst:522
msgid "Creating and Removing Line Blocks"
msgstr ""

#: ../../source/user/emacs.rst:524
msgid "To create line blocks, first select the region to convert and invoke ``rst-line-block-region`` ``C-c C-r C-l``. For example, the following ::"
msgstr ""

#: ../../source/user/emacs.rst:538
msgid "This works even if the region is indented. To remove line blocks, select a region and invoke with a prefix argument."
msgstr ""

#: ../../source/user/emacs.rst:542
msgid "Commenting a Region of Text"
msgstr ""

#: ../../source/user/emacs.rst:544
msgid "``rst-mode`` understands reStructuredText_ comments. Use ``comment-dwim`` (``M-;``) to work on comments as usual::"
msgstr ""

#: ../../source/user/emacs.rst:558
msgid "To remove a comment you have to tell this to ``comment-dwim`` explicitly by using a prefix argument (``C-u M-;``)."
msgstr ""

#: ../../source/user/emacs.rst:561
msgid "Please note that only indented comments are supported properly by the parts of ``comment-dwim`` working on regions."
msgstr ""

#: ../../source/user/emacs.rst:567
msgid "Converting Documents from Emacs"
msgstr ""

#: ../../source/user/emacs.rst:569
msgid "``rst-mode`` provides a number of functions for running documents being edited through the docutils tools. The key bindings for these commands start with ``C-c C-c``."
msgstr ""

#: ../../source/user/emacs.rst:573
msgid "The main generic function is ``rst-compile`` (``C-c C-c C-c``). It invokes a compilation command with the correct output name for the current buffer and then invokes Emacs' compile function. It also looks for the presence of a ``docutils.conf`` configuration file in the parent directories and adds it to the command line options. There is also ``rst-compile-alt-toolset`` (``C-c C-c C-a``) in case you often need run your document in a second toolset."
msgstr ""

#: ../../source/user/emacs.rst:581
msgid "You can customize the commands being used by setting ``rst-compile-primary-toolset`` and ``rst-compile-secondary-toolset``."
msgstr ""

#: ../../source/user/emacs.rst:584
msgid "Other commands are available for other formats:"
msgstr ""

#: ../../source/user/emacs.rst:586
msgid "``rst-compile-pseudo-region`` (``C-c C-c C-x``)"
msgstr ""

#: ../../source/user/emacs.rst:588
msgid "When crafting documents, it is often convenient to view which data structures docutils will parse them into. You can use to run the active region through ``rst2pseudoxml.py`` and have the output automatically be displayed in a new buffer."
msgstr ""

#: ../../source/user/emacs.rst:593
msgid "``rst-compile-pdf-preview`` (``C-c C-c C-p``)"
msgstr ""

#: ../../source/user/emacs.rst:595
msgid "Convert the current document to PDF and launch a viewer on the results."
msgstr ""

#: ../../source/user/emacs.rst:598
msgid "``rst-compile-slides-preview`` (``C-c C-c C-s``): Convert the current document to S5 slides and view in a web browser."
msgstr ""

#: ../../source/user/emacs.rst:602
msgid "Imenu Support"
msgstr ""

#: ../../source/user/emacs.rst:605
msgid "Using Imenu"
msgstr ""

#: ../../source/user/emacs.rst:607
msgid "Emacs_ has a package called ``imenu``. ``rst-mode`` supports Imenu by adding a function to convert the structure of a reStructuredText_ buffer to an Imenu index. Thus you can use invoke ``imenu`` (``M-x imenu``) to navigate through the section index or invoke ``imenu-add-to-menubar`` (``M-x imenu-add-to-menubar``) to add an Imenu menu entry to Emacs' menu bar."
msgstr ""

#: ../../source/user/emacs.rst:615
msgid "Using which function"
msgstr ""

#: ../../source/user/emacs.rst:617
msgid "As a side effect of Imenu support the ``which-func`` package is also supported. Invoke ``which-function-mode`` (``M-x which-function-mode``) to add the name of the current section to the mode line. This is especially useful if you navigate through documents with long sections which do not fit on a single screen."
msgstr ""

#: ../../source/user/emacs.rst:624
msgid "Using the Table of Contents"
msgstr ""

#: ../../source/user/emacs.rst:626
msgid "The sections in a reStructuredText_ document can be used to form a table of contents. ``rst-mode`` can work with such a table of contents in various forms. Key bindings for these commands start with ``C-c C-t``."
msgstr ""

#: ../../source/user/emacs.rst:632
msgid "Navigating Using the Table of Contents"
msgstr ""

#: ../../source/user/emacs.rst:634
msgid "When you are editing long documents, it can be a bit difficult to orient yourself in the structure of your text. To that effect, a function is provided that presents a hierarchically indented table of contents of the document in a temporary buffer, in which you can navigate and press ``Return`` to go to a specific section."
msgstr ""

#: ../../source/user/emacs.rst:640
msgid "Invoke ``rst-toc`` (``C-c C-t C-t``). It presents a temporary buffer that looks something like this::"
msgstr ""

#: ../../source/user/emacs.rst:660
msgid "When you move the cursor to a section title and press ``RET`` or ``f`` or click with ``button1`` on a section title, the temporary buffer disappears and you are left with the cursor positioned at the chosen section. Clicking with ``button2`` jumps to the respective section but keeps the toc buffer. You can use this to look at the various section headers quickly. Use ``q`` in this buffer to just quit it without moving the cursor in the original document. Use ``z`` to zap the buffer altogether."
msgstr ""

#: ../../source/user/emacs.rst:670
msgid "Inserting a Table of Contents"
msgstr ""

#: ../../source/user/emacs.rst:672
msgid "Oftentimes in long text documents that are meant to be read directly, a table of contents is inserted at the beginning of the text. In reStructuredText_ documents, since the table of contents is automatically generated by the parser with the ``.. contents::`` directive, people generally have not been adding an explicit table of contents to their source documents, and partly because it is too much trouble to edit and maintain."
msgstr ""

#: ../../source/user/emacs.rst:680
msgid "The Emacs_ support for reStructuredText_ provides a function to insert such a table of contents in your document. Since it is not meant to be part of the document text, you should place such a table of contents within a comment, so that it is ignored by the parser. This is the favored usage::"
msgstr ""

#: ../../source/user/emacs.rst:703
msgid "Just place the cursor at the top-left corner where you want to insert the TOC and invoke the function ``rst-toc-insert`` with ``C-c C-t C-i``. The table of contents will display all the section titles that are under the location where the insertion occurs. This way you can insert local table of contents by placing them in the appropriate location."
msgstr ""

#: ../../source/user/emacs.rst:710
msgid "You can use a numeric prefix argument to limit the depth of rendering of the TOC."
msgstr ""

#: ../../source/user/emacs.rst:713
msgid "You can customize the look of the TOC by setting the values of the following variables: ``rst-toc-indent``, ``rst-toc-insert-style``, ``rst-toc-insert-max-level``."
msgstr ""

#: ../../source/user/emacs.rst:718
msgid "Maintaining the Table of Contents Up-to-date"
msgstr ""

#: ../../source/user/emacs.rst:720
msgid "One issue is that you will probably want to maintain the inserted table of contents up-to-date. ``rst-toc-update`` (``C-c C-t C-u``) will automatically update an inserted table of contents following a ``.. contents::`` directive laid out like the example above."
msgstr ""

#: ../../source/user/emacs.rst:726
msgid "Syntax Highlighting via Font-Lock"
msgstr ""

#: ../../source/user/emacs.rst:728
msgid "``rst-mode`` provides syntax highlighting for nearly all to reStructuredText_ constructs."
msgstr ""

#: ../../source/user/emacs.rst:731
msgid "Use ``customize-group rst-faces`` to customize the faces used for font-locking."
msgstr ""

#: ../../source/user/emacs.rst:735
msgid "Customization"
msgstr ""

#: ../../source/user/emacs.rst:737
msgid "Some aspects of ``rst-mode`` can be configured through the customization feature of Emacs_. Try ::"
msgstr ""

#: ../../source/user/emacs.rst:742
msgid "for all customizations or use the respective menu entry. Those customizations which are useful for many people are described in this section."
msgstr ""

#: ../../source/user/emacs.rst:747
msgid "Customizing Section Title Formatting"
msgstr ""

#: ../../source/user/emacs.rst:749
msgid "For a couple of things the reStructuredText_ syntax offers a choice of options on how to do things exactly. Some of these choices influence the operation of ``rst.el`` and thus can be configured. The customizations are contained in the ``rst-adjust`` group."
msgstr ""

#: ../../source/user/emacs.rst:754
msgid "Among these things is the exact layout of section adornments. In fact reStructuredText_ prescribes only the characters and how these characters must be used but the exact use of concrete adornments may be different in every source file. Using the customization option ``rst-preferred-adornments`` you can tell ``rst-mode`` on the exact sequence of adornments you prefer to markup the different levels of sections headers."
msgstr ""

#: ../../source/user/emacs.rst:762
msgid "Finally the title text of over-and-under adornments may be indented in reStructuredText_. ``rst-default-indent`` tells ``rst-mode`` how many positions a over-and-under adornment should be indented when toggling from simple adornment and in case a consistent indentation throughout the whole buffer for such adornment is needed."
msgstr ""

#: ../../source/user/emacs.rst:769
msgid "Customizing Indentation"
msgstr ""

#: ../../source/user/emacs.rst:771
msgid "reStructuredText_ uses indentation a lot to signify a certain meaning. In some cases the exact amount of indentation is prescribed by the syntax while in some cases the exact indentation is not fixed. The customization group ``rst-indent`` allows to customize the amount of indentation in these cases."
msgstr ""

#: ../../source/user/emacs.rst:777
msgid "In field lists the content of a field needs to be indented relative to the field label. ``rst-indent-field`` tells ``rst-mode`` the amount of indentation to use for field content. A value of zero always indents according to the content after the field label."
msgstr ""

#: ../../source/user/emacs.rst:782
msgid "The indentation of literal blocks is controlled by ``rst-indent-literal-normal`` and ``rst-indent-literal-minimized``. The first is used when the leading literal tag (``::``) appears alone on a line. The second is used when the minimized style is used where the literal tag follows some text."
msgstr ""

#: ../../source/user/emacs.rst:788
msgid "The indentation of comments is controlled by ``rst-indent-comment``. Of course this makes only sense for the indented comments of reStructuredText_."
msgstr ""

#: ../../source/user/emacs.rst:792
msgid "Customization option ``rst-indent-width`` gives the default indentation when there are no other hints on what amount of indentation to use."
msgstr ""

#: ../../source/user/emacs.rst:797
msgid "Customizing Faces"
msgstr ""

#: ../../source/user/emacs.rst:799
msgid "The faces used for font-locking can be defined in the ``rst-faces`` customization group. The customization options ending in ``-face`` are only there for backward compatibility so please leave them as they are."
msgstr ""

#: ../../source/user/emacs.rst:804
msgid "reStructuredText_ sets no limit on the nesting of sections. By default there are six levels of fontification defined. Section titles deeper than six level have no special fontification - only the adornments are fontified. The exact mapping from a level to a face is done by by ``rst-adornment-faces-alist``, however. So if you need fontification deeper than six levels you may want to customize this option. You may also want to customize it if you like the general idea of section title fontification in ``rst-mode`` but for instance prefer a reversed order."
msgstr ""

#: ../../source/user/emacs.rst:815
msgid "Customizing Conversion"
msgstr ""

#: ../../source/user/emacs.rst:817
msgid "Conversion_ can be customized by the customization options in the customization group ``rst-compile``."
msgstr ""

#: ../../source/user/emacs.rst:820
msgid "If some conversion does not work as expected please check the variable ``rst-compile-toolsets`` ::"
msgstr ""

#: ../../source/user/emacs.rst:825
msgid "This variable defines the commands and other details used for conversion. In case of problems please check that the commands are either available or customize them to what is available in your environment."
msgstr ""

#: ../../source/user/emacs.rst:830
msgid "There are some options in V1.4.1 of ``rst.el`` which should be customization options but are not yet. Customization support will be added in a later version."
msgstr ""

#: ../../source/user/emacs.rst:834
msgid "Please note that there is a package ``rst2pdf`` based on the ReportLab library. Please note that the command of this package requires an additional ``-o`` for naming the output file. This breaks the usual conventions employed by Docutils tools. ``rst-mode`` V1.4.1 does not support this directly."
msgstr ""

#: ../../source/user/emacs.rst:841
msgid "Other Customizations"
msgstr ""

#: ../../source/user/emacs.rst:843
msgid "``rst-preferred-bullets`` can be customized to hold your preferred set of bullets to use for bulleted lists."
msgstr ""

#: ../../source/user/emacs.rst:846
msgid "``rst-mode-hook`` is a normal major mode hook which may be customized. It is run if you enter ``rst-mode``."
msgstr ""

#: ../../source/user/emacs.rst:850
msgid "Related aspects"
msgstr ""

#: ../../source/user/emacs.rst:852
msgid "This section covers some general aspects using Emacs_ for editing reStructuredText_ source. They are not directly related to ``rst-mode`` but may enhance your experience."
msgstr ""

#: ../../source/user/emacs.rst:857
msgid "``text-mode`` Settings"
msgstr ""

#: ../../source/user/emacs.rst:859
msgid "Consult the Emacs_ manual for more ``text-mode`` customizations. In particular, you may be interested in setting the following variables, functions and modes that pertain somewhat to ``text-mode``:"
msgstr ""

#: ../../source/user/emacs.rst:863
msgid "``indent-tabs-mode``"
msgstr ""

#: ../../source/user/emacs.rst:864
msgid "``colon-double-space``"
msgstr ""

#: ../../source/user/emacs.rst:865
msgid "``sentence-end-double-space``"
msgstr ""

#: ../../source/user/emacs.rst:866
msgid "``auto-fill-mode``"
msgstr ""

#: ../../source/user/emacs.rst:867
msgid "``auto-mode-alist``"
msgstr ""

#: ../../source/user/emacs.rst:870
msgid "Editing Tables: Emacs table mode"
msgstr ""

#: ../../source/user/emacs.rst:872
msgid "You may want to check out `Emacs table mode`_ to create an edit tables, it allows creating ASCII tables compatible with reStructuredText_."
msgstr ""

#: ../../source/user/emacs.rst:879
msgid "Character Processing"
msgstr ""

#: ../../source/user/emacs.rst:881
msgid "Since reStructuredText punts on the issue of character processing, here are some useful resources for Emacs_ users in the Unicode world:"
msgstr ""

#: ../../source/user/emacs.rst:884
msgid "`xmlunicode.el and unichars.el from Norman Walsh <http://nwalsh.com/emacs/xmlchars/index.html>`__"
msgstr ""

#: ../../source/user/emacs.rst:887
msgid "`An essay by Tim Bray, with example code <http://www.tbray.org/ongoing/When/200x/2003/09/27/UniEmacs>`__"
msgstr ""

#: ../../source/user/emacs.rst:890
msgid "For Emacs_ users on Mac OS X, here are some useful useful additions to your .emacs file."
msgstr ""

#: ../../source/user/emacs.rst:893
msgid "To get direct keyboard input of non-ASCII characters (like \"option-e e\" resulting in \"Ã©\" [eacute]), first enable the option key by setting the command key as your meta key::"
msgstr ""

#: ../../source/user/emacs.rst:899
msgid "Next, use one of these lines::"
msgstr ""

#: ../../source/user/emacs.rst:904
msgid "I prefer the first line, because it enables non-Latin-1 characters as well (em-dash, curly quotes, etc.)."
msgstr ""

#: ../../source/user/emacs.rst:907
msgid "To enable the display of all characters in the Mac-Roman charset, first create a fontset listing the fonts to use for each range of characters using charsets that Emacs_ understands::"
msgstr ""

#: ../../source/user/emacs.rst:917
msgid "Latin-1 doesn't cover characters like em-dash and curly quotes, so \"mule-unicode-0100-24ff\" is needed."
msgstr ""

#: ../../source/user/emacs.rst:920
msgid "Next, use that fontset::"
msgstr ""

#: ../../source/user/emacs.rst:924
msgid "To enable cooperation between the system clipboard and the Emacs_ kill ring, add this line::"
msgstr ""

#: ../../source/user/emacs.rst:929
msgid "Other useful resources are in `Andrew Choi's Emacs 21 for Mac OS X FAQ <http://members.shaw.ca/akochoi-emacs/stories/faq.html>`__."
msgstr ""

#: ../../source/user/emacs.rst:933
msgid "Credits"
msgstr ""

#: ../../source/user/emacs.rst:935
msgid "Part of the original code of ``rst.el`` has been written by Martin Blais and David Goodger and Wei-Wei Guo. The font-locking came from Stefan Merten."
msgstr ""

#: ../../source/user/emacs.rst:939
msgid "Most of the code has been modified, enhanced and extended by Stefan Merten who also is the current maintainer of ``rst.el``."
msgstr ""

